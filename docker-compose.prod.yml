services:
  chat-royale-backend:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
      target: runner
    container_name: chat-royale-backend
    ports:
      - "3001:3001"
    env_file:
      - src/backend/.env
    environment:
      - PORT=3001
      - NODE_ENV=production
    restart: unless-stopped
    depends_on:
      clash-royale-mcp-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - chatroyale-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  clash-royale-mcp-server:
    build:
      context: ./src/mcp
      dockerfile: Dockerfile
    container_name: clash-royale-mcp-server
    ports:
      - "8000:8000"
    env_file:
      - src/mcp/.env
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/mcp"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - chatroyale-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

  chat-royale-frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
      target: nginx
    container_name: chat-royale-frontend
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - chatroyale-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

networks:
  chatroyale-network:
    driver: bridge 